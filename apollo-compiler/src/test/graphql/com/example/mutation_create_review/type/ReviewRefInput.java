// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.mutation_create_review.type;

import com.apollographql.apollo.api.Input;
import com.apollographql.apollo.api.InputType;
import com.apollographql.apollo.api.internal.InputFieldMarshaller;
import com.apollographql.apollo.api.internal.InputFieldWriter;
import com.apollographql.apollo.api.internal.Utils;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class ReviewRefInput implements InputType {
  private final Input<ReviewInput> reviewInput;

  private transient volatile int $hashCode;

  private transient volatile boolean $hashCodeMemoized;

  ReviewRefInput(Input<ReviewInput> reviewInput) {
    this.reviewInput = reviewInput;
  }

  public @Nullable ReviewInput reviewInput() {
    return this.reviewInput.value;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public InputFieldMarshaller marshaller() {
    return new InputFieldMarshaller() {
      @Override
      public void marshal(InputFieldWriter writer) throws IOException {
        if (reviewInput.defined) {
          writer.writeObject("reviewInput", reviewInput.value != null ? reviewInput.value.marshaller() : null);
        }
      }
    };
  }

  @Override
  public int hashCode() {
    if (!$hashCodeMemoized) {
      int h = 1;
      h *= 1000003;
      h ^= reviewInput.hashCode();
      $hashCode = h;
      $hashCodeMemoized = true;
    }
    return $hashCode;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof ReviewRefInput) {
      ReviewRefInput that = (ReviewRefInput) o;
      return this.reviewInput.equals(that.reviewInput);
    }
    return false;
  }

  public static final class Builder {
    private Input<ReviewInput> reviewInput = Input.absent();

    Builder() {
    }

    public Builder reviewInput(@Nullable ReviewInput reviewInput) {
      this.reviewInput = Input.fromNullable(reviewInput);
      return this;
    }

    public Builder reviewInputInput(@NotNull Input<ReviewInput> reviewInput) {
      this.reviewInput = Utils.checkNotNull(reviewInput, "reviewInput == null");
      return this;
    }

    public ReviewRefInput build() {
      return new ReviewRefInput(reviewInput);
    }
  }
}
